{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": { "200": { "description": "Hello World" } },
        "summary": "Get Hello World",
        "tags": ["App"]
      }
    },
    "/health-check": {
      "get": {
        "description": "Check the health of the application",
        "operationId": "HealthCheckController_check",
        "parameters": [],
        "responses": {
          "200": { "description": "The application is healthy" },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "info": {
                      "type": "object",
                      "example": { "database": { "status": "up" } },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": { "status": "up" },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "",
        "tags": ["HealthCheck"]
      }
    },
    "/v1/user": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a new user",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/v1/user/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched a user",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["User"]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a user",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["User"]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted a user",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteResult" }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/v1/user/get-data": {
      "get": {
        "operationId": "UserController_getData",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully fetched user details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["User"]
      }
    }
  },
  "info": {
    "title": "Collaborative Code Editor Service",
    "description": "Collaborative Code Editor Service",
    "version": "1.0",
    "contact": {}
  },
  "tags": [{ "name": "collaborative-code-editor-service", "description": "" }],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "githubUsername": {
            "type": "string",
            "description": "The GitHub username of the user"
          },
          "email": { "type": "string", "description": "The email of the user" },
          "githubId": {
            "type": "number",
            "description": "The github ID of the user"
          },
          "githubLink": {
            "type": "string",
            "description": "The GitHub link of the user"
          },
          "name": { "type": "string", "description": "The name of the user" },
          "bio": { "type": "string", "description": "The bio of the user" },
          "avatarUrl": {
            "type": "string",
            "description": "The avatar URL of the user"
          },
          "followers": {
            "type": "number",
            "description": "The number of followers of the user",
            "default": 0
          },
          "following": {
            "type": "number",
            "description": "The number of following of the user",
            "default": 0
          },
          "gender": {
            "type": "string",
            "description": "The gender of the user"
          }
        },
        "required": [
          "githubUsername",
          "email",
          "githubId",
          "githubLink",
          "name",
          "followers",
          "following"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user"
          },
          "githubUsername": {
            "type": "string",
            "description": "The GitHub username of the user"
          },
          "githubId": {
            "type": "number",
            "description": "The github ID of the user"
          },
          "email": { "type": "string", "description": "The email of the user" },
          "githubLink": {
            "type": "string",
            "description": "The GitHub link of the user"
          },
          "name": { "type": "string", "description": "The name of the user" },
          "bio": { "type": "string", "description": "The bio of the user" },
          "gender": {
            "type": "string",
            "description": "The gender of the user"
          },
          "avatarUrl": {
            "type": "string",
            "description": "The avatar URL of the user"
          },
          "followers": {
            "type": "number",
            "description": "The number of followers of the user"
          },
          "following": {
            "type": "number",
            "description": "The number of following of the user"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date and time the user was created"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date and time the user was updated"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date and time the user was deleted"
          }
        },
        "required": [
          "id",
          "githubUsername",
          "githubId",
          "email",
          "githubLink",
          "name",
          "bio",
          "gender",
          "avatarUrl",
          "followers",
          "following",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user"
          },
          "githubUsername": {
            "type": "string",
            "description": "The GitHub username of the user"
          },
          "githubId": {
            "type": "number",
            "description": "The GitHub ID of the user"
          },
          "email": { "type": "string", "description": "The email of the user" },
          "githubLink": {
            "type": "string",
            "description": "The GitHub link of the user"
          },
          "name": { "type": "string", "description": "The name of the user" },
          "bio": { "type": "string", "description": "The bio of the user" },
          "avatarUrl": {
            "type": "string",
            "description": "The avatar URL of the user"
          },
          "followers": {
            "type": "number",
            "description": "The number of followers of the user"
          },
          "following": {
            "type": "number",
            "description": "The number of following of the user"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the user"
          }
        },
        "required": ["id"]
      },
      "DeleteResult": { "type": "object", "properties": {} }
    }
  }
}
